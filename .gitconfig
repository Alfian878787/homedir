[user]
name = Brandon Rhodes
email = brandon@rhodesmill.org

[alias]
a = add -A
abandon = !b="$(git symbolic-ref --short HEAD)" && [ "$b" != "master" ] && git checkout master && git branch -D "$b"
abort = merge --abort
amend = commit --amend
atag = !bash -c 'git tag -a \"$@\" && git push --follow-tags' --
br = "!if [ -n \"$1\" ] ;then git branch \"$@\" ;else git for-each-ref --sort=committerdate refs/heads/ --format=\"%(HEAD) %(color:yellow)%(objectname:short)%(color:reset) %(refname:short) (%(color:green)%(committerdate:relative)%(color:reset))\" ;fi ;:"
ci = commit -v
co = checkout
cleanup = clean -dfx -e .vagrant
d = diff
diff-words = diff --color-words
diff-vs-master = !git diff -M "$@" $(git merge-base HEAD origin/master) -- .
fetch-pull-request = !git fetch origin pull/$1/head:pull-$1
hard = reset --hard
incoming = remote show origin
l = log --graph --pretty=oneline --abbrev-commit --decorate=short
lp = -c pager.log='LESSHISTFILE=- less --pattern=^CommitDate:' log -p --pretty=fuller
ls = log --stat --pretty=fuller
patch = commit --patch -v
merge-abort = merge --abort
mine = !git log --stat --pretty=fuller --author="$(git config user.email)"
rm-branch = "!f(){ \
  cd \"$(git rev-parse --show-toplevel)\"; \
  cd .git/refs/heads; \
  for b in \"$@\"; \
  do if [ -f $b ]; then git branch -D $b; fi; \
  done; \
  cd ../remotes; \
  for d in *; \
  do for b in \"$@\"; \
     do if [ -f $d/$b ]; then git push --delete $d $b; fi; \
     done; \
  done; \
  };f"
score = diff --shortstat
score-vs-master = !git diff --shortstat $(git merge-base HEAD origin/master) -- .
soft = reset HEAD .
squash = !git reset --soft $(git merge-base HEAD origin/master) && git ci
st = status
undo = reset --soft HEAD~1
who = "!f () { \
    git log --date='format:%Y-%m' --format='%cd %ae' --since=1.year $@ \
        | sort | uniq -c | awk '{printf(\"%s %4s %s\\n\",$2,$1,$3)}' \
        | sort -n \
        | awk '{t=\"\";if($1!=m)m=t=$1;printf(\"%7s %4s %s\\n\",t,$2,$3)}' ; \
    }; f"
w = diff --color-words=.

[core]
pager = less -FRX
excludesfile = ~/.gitexcludes

[color]
branch = auto
diff = auto
interactive = auto
status = auto

[diff]
noprefix = true

[filter "sshconfig_trailer"]
clean = sed '/^. Everything below will be ignored by git.$/q'

[merge]
conflictstyle = diff3

[push]
default = current

[include]
path = .gitlocal
