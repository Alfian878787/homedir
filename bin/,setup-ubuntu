#!/bin/bash

set -e

if [ "$(id -u)" = "0" ]
then
    echo 'Error: this script should not be run as root' >&2
    exit 1
fi

umask 022
sudo apt-get update

# Avoid "perl" locale errors and the "locale" error:
# locale: Cannot set LC_ALL to default locale: No such file or directory

sudo locale-gen en_US en_US.UTF-8
sudo dpkg-reconfigure --frontend=noninteractive locales

# Install happy packages.

sudo apt-get install -y \
    apache2-utils    `: provides 12 commands, especially "ab"` \
    apt-file         `: to find where files come from` \
    autocutsel       `: unifies the X Windows clipboard and selection` \
    cabextract       `: for extracting binary Windows drivers ` \
    chromium-browser `: browser-of-choice` \
    chromium-chromedriver `: and make it scriptable` \
    colordiff wdiff  `: for the occasional need to diff outside of git ` \
    cscope           `: for that rare trawl through C code ` \
    emacs24          `: editor-of-choice` \
    emacs24-el       `: readable LISP source` \
    fvwm             `: window manager` \
    fonts-inconsolata `: favorite console font` \
    fonts-sil-gentium `: font for presentation slides` \
    git              `: distributed version control` \
    gnumeric         `: spreadsheet` \
    groff            `: for processing old documents` \
    html2text        `: when data is available in no better format` \
    htop             `: much better "top" command` \
    indicator-cpufreq `: for pegging the CPU speed when I need to` \
    inkscape         `: SVG editing` \
    inotify-tools    `: for waiting on files to change` \
    libreadline-dev  `: for compiling Python from source` \
    jq               `: like grep but for JSON` \
    mplayer2 geeqie  `: for media` \
    openssh-server   `: secure shell` \
    pandoc           `: requirement of nbconvert for the IPython notebook` \
    pcregrep         `: reasonable RE syntax, and can capture groups` \
    pdftk            `: perform various useful operations on PDFs` \
    pm-utils         `: so I can suspend the machine from its command line` \
    pwgen            `: random passwords` \
    python-dev       `: necessity` \
    pypy pypy-dev    `: for when I want to be fast` \
    python3 python3-dev `: for when I feel modern` \
    idle-python2.7   `: for showing IDLE and turtle to newcomers` \
    libssl-dev       `: for compiling things that need cryptography` \
    nautilus         `: for mounting and unmounting flash drives` \
    nmap             `: for finding the IP address of printers on the LAN` \
    s3cmd            `: the cloud` \
    suckless-tools   `: simple tools to go with my simple window manager` \
    stellarium       `: to quickly answer what-is-that-over-there questions` \
    sqlite3          `: for command-line access to its databases` \
    texlive-latex-recommended `: for building PDF documentation with Sphinx` \
    texlive-latex-extra \
    texlive-fonts-recommended \
    trayer           `: lets me click the network manager` \
    tree             `: for when ls is simply not enough` \
    ttf-mscorefonts-installer `: for browsing the web` \
    ttf-ubuntu-font-family `: default Ubuntu font family, for emacs` \
    units            `: desk calculator` \
    vagrant          `: for various virtualization tasks` \
    wakeonlan        `: for waking up other machines I have suspended` \
    whois            `: for searching the domain name registries` \
    wireshark        `: primarily for debugging TCP` \
    xautolock        `: to lock my screen` \
    xbacklight       `: so FVWM key bindings can adjust screen brightness` \
    xclip            `: let shell scripts get and set the paste buffer` \
    xserver-xephyr   `: confine apps to a recursive X server in a window` \
    zsh              `: favorite shell` \
    \
    `: Mount remote filesystems` \
    bindfs encfs smbnetfs sshfs \
    \
    `: for building tools like ag and ledger` \
    automake libpcre3-dev pkg-config \
    \
    `: for gevent` \
    libevent1-dev \
    \
    `: for ledger` \
    cmake libboost-all-dev libgmp-dev libmpfr-dev \
    \
    `: Hettinger reminded me how awesome these tools are` \
    graphviz python-blockdiag python-seqdiag python-actdiag python-nwdiag

# Arrange for packages to automatically update.

# sudo apt-get install unattended-upgrades

# sudo dd of=/etc/apt/apt.conf.d/10periodic <<'EOF'
# APT::Periodic::Update-Package-Lists "1";
# APT::Periodic::Download-Upgradeable-Packages "1";
# APT::Periodic::AutocleanInterval "7";
# APT::Periodic::Unattended-Upgrade "1";
# EOF

# Run "apt-file update" for the first time if necessary.

if ! ls /var/cache/apt/apt-file | grep -q .
then
    sudo apt-file update
fi

# Wipe out the default Ubuntu ssh client configuration, in particular to
# turn off its SendEnv settings that send locale variables like LC_PAPER
# even to hosts that cannot digest it.

sudo dd if=/dev/null of=/etc/ssh/ssh_config

# Docker

#sudo apt-get install linux-image-extra-`uname -r`
#sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9

#sudo sh -c "echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"
#sudo chmod a+r /etc/apt/sources.list.d/docker.list
#sudo apt-get install lxc-docker
#sudo docker pull ubuntu
#sudo adduser brandon docker

# Shut down the oneconf service to avoid various error messages.

if [ -d /usr/share/oneconf ]
then
    sudo chmod a-x /usr/share/oneconf/oneconf-service
    sudo chmod a-x /usr/share/oneconf/oneconf-query
    sudo chmod a-x /usr/share/oneconf/oneconf-update
    sudo killall -q oneconf-service || true
fi

# Outlaw Ubuntu's terrible "Sorry the application X has stopped
# unexpectedly" popups.

sudo apt-get purge -y apport apport-gtk apport-symptoms python3-apport \
    whoopsie

# A desktop session that simply runs my .xinitrc like in the old days.

sudo dd of=/usr/share/xsessions/xinitrc.desktop <<'EOF'
[Desktop Entry]
Name=xinitrc
Comment=Run your .xinitrc file
Exec=/bin/bash .xinitrc
Type=Application
EOF

sudo chmod 644 /usr/share/xsessions/xinitrc.desktop

# Set my shell.

sudo chsh -s /bin/zsh $USER

# Let everyone suspend or hibernate.

if ! sudo grep -q pm-suspend /etc/sudoers
then
    sudo chmod +w /etc/sudoers
    sudo bash -c 'echo "ALL ALL=NOPASSWD: /usr/sbin/pm-suspend" >> /etc/sudoers'
    sudo bash -c 'echo "ALL ALL=NOPASSWD: /usr/sbin/pm-hibernate" >> /etc/sudoers'
    sudo bash -c 'echo "ALL ALL=NOPASSWD: /bin/kbd_mode" >> /etc/sudoers'
    sudo chmod -w /etc/sudoers
fi

# Enable most sysrq commands.

sudo sed -i 's/^kernel.sysrq = .*/kernel.sysrq = 246/' \
     /etc/sysctl.d/10-magic-sysrq.conf

# Tell `/lib/systemd/systemd --user` to exit after I log out.

sudo sed -i 's/#KillUserProcesses=no/KillUserProcesses=yes/' \
    /etc/systemd/logind.conf
